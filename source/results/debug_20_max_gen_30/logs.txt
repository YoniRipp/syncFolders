Generation 1: best cost = 881, max weight = 728, best individual = [1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 0 1 1]
Generation 2: best cost = 918, max weight = 782, best individual = [1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 1 1]
Generation 3: best cost = 989, max weight = 789, best individual = [1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 4: best cost = 1018, max weight = 837, best individual = [1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1]
Generation 5: best cost = 1018, max weight = 837, best individual = [1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1]
Generation 6: best cost = 1018, max weight = 837, best individual = [1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1]
Generation 7: best cost = 1018, max weight = 837, best individual = [1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1]
Generation 8: best cost = 1018, max weight = 837, best individual = [1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1]
Generation 9: best cost = 1018, max weight = 837, best individual = [1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1]
Generation 10: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 11: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 12: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 13: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 14: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 15: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 16: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 17: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 18: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 19: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 20: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 21: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 22: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 23: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 24: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 25: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 26: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 27: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 28: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 29: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Generation 30: best cost = 1024, max weight = 871, best individual = [1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Best subset of objects: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20]
Total cost: 1024
Total weight: 871